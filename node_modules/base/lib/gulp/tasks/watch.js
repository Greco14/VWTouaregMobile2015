/**
 * watch.js
 * Created by raul on 11/20/14.
 */

var plugins = require('gulp-load-plugins')({scope: ['dependencies'], pattern: ['gulp-*','browser-sync', 'del']});
var config = require('../config');
var path = require("path");
var handleErrors = require('../util/handleErrors');
var chalk = require('chalk');
var gutil = require('gulp-util');

var jade_watch = {
    task_name: 'jade',
    opts: {name: 'jade watcher', read: false},
    source: config.jade.sourceRoot + '**/*.jade'
};

var scripts_watch = {
    task_name: 'scripts',
    opts: {name: 'scripts watcher', read: false},
    source:[config.typescript.src, config.templates.src]
};

var styles_watch = {
    task_name: 'styles',
    opts: {name: 'styles watcher', read: false},
    source:[config.styles.sourceRoot + '**/*.{sass,scss}', config.vendor.styles.sourceRoot + '**/*.css']
};

var libs_watch = {
    task_name: 'libs',
    opts: {name: 'libs watcher', read: false},
    source:[config.vendor.js.src, 'bower_components/**/*.js']
};

var asset_watch = {
    task_name: 'assets',
    opts: {name: 'assets watcher', read: false, verbose: true},
    source:config.assets.src
};

function createWatch(gulpInst, watcher) {
    return plugins.watch(watcher.source, watcher.opts, function (file) {
                gulpInst.start(watcher.task_name);
    }).pipe(plugins.plumber({errorHandler: handleErrors}));
}

module.exports = function (gulp) {


    gulp.task('watch', function () {

        gutil.log(chalk.magenta("[-- watch --]"));
        gutil.log(chalk.magenta(jade_watch.source));
        gutil.log(chalk.magenta(scripts_watch.source));
        gutil.log(chalk.magenta(styles_watch.source));
        gutil.log(chalk.magenta(libs_watch.source));
        gutil.log(chalk.magenta(asset_watch.source));
        
        // gulp.watch(jade_watch.source, ['jade']);
        // gulp.watch(scripts_watch.source, ['scripts']);
        // gulp.watch(styles_watch.source, ['styles']);
        // gulp.watch(libs_watch.source, ['libs']);
        
        //--//
        createWatch(gulp, jade_watch);
        createWatch(gulp, scripts_watch);
        createWatch(gulp, styles_watch);
        createWatch(gulp, libs_watch);
        //--//
        var warcher = plugins.watch(asset_watch.source, asset_watch.opts, function (file) {
            if (file.event === 'deleted') { // if a file is deleted, forget about it
                console.log("file.relative:", file.relative);
                var destFilePath = path.resolve(config.assets.dest, file.relative);
                plugins.del(destFilePath);
            }
            gulp.start('assets');
        });

        warcher.on("error", function(err){
            gutil.log(chalk.magenta("-- Watch Error --"));
            gutil.log(chalk.magenta(err));
        });
    });
};