/**
 * templates.js
 * Created by raul on 11/20/14.
 */

var plugins = require('gulp-load-plugins')({scope: ['dependencies']});
var templates = require('../config').templates;

module.exports = function (gulp) {
    gulp.task('templates', function () {
        // Load templates from the client/templates/ folder relative to where gulp was executed
        return gulp.src(templates.src)
            // Compile each Handlebars template source file to a template function
            .pipe(plugins.handlebars())
            // Wrap each template function in a call to Handlebars.template
            .pipe(plugins.wrap('Handlebars.template(<%= contents %>)'))
            // Declare template functions as properties and sub-properties of MyApp.templates
            .pipe(plugins.declare({
                namespace: 'Handlebars.templates',
                noRedeclare: true, // Avoid duplicate declarations
                processName: function (filePath) {
                    // Allow nesting based on path using gulp-declare's processNameByPath()
                    // You can remove this option completely if you aren't using nested folders
                    // Drop the client/templates/ folder from the namespace path by removing it from the filePath
                    return plugins.declare.processNameByPath(filePath.replace(templates.sourceRoot, ''));
                }
            }))
            // Concatenate down to a single file
            .pipe(plugins.concat(templates.outputName))
            // Write the output into the build folder
            .pipe(gulp.dest(templates.dest));
    });
}