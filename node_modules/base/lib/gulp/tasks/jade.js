/**
 * jade.js
 * Created by raul on 11/20/14.
 */


var plugins = require('gulp-load-plugins')({scope: ['dependencies'], pattern: ['gulp-*', 'browser-sync']});
var jade = require('../config').jade;
var handleErrors = require('../util/handleErrors');
var fs = require('fs');
var cli = require('../../cli');
var path = require("path");

var merge = function (root, source) {
    for (var key in source) {
        root[key] = source[key];
    }

    return root;
};

var getLocals = function (production) {
    var config, locals;

    // Use fs.readFileSync('foo.json') instead of require('foo.json')
    // because of modules cache: http://stackoverflow.com/questions/9210542/
    config = fs.readFileSync(path.resolve(jade.config), 'utf-8');
    config = JSON.parse(config);

    locals = production ? config.Production: config.Development;
    locals = merge(locals, config.Global);

    return locals;
};

module.exports = function (gulp) {
    var isProduction = cli.argv["production"];

    gulp.task('jade', function () {
        return gulp.src([jade.src])
            .pipe(plugins.plumber({errorHandler: handleErrors}))
            .pipe(plugins.jade({
                locals: getLocals(isProduction),
                pretty: !isProduction
            }))
            .pipe(gulp.dest(jade.dest))
            .pipe(plugins.browserSync.reload({stream: true}))
            .pipe(plugins.notify({message: 'Jade task complete'}));
    });
};