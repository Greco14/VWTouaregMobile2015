/**
 * create.js
 * Created by raul on 11/18/14.
 */

var chalk = require('chalk');
var path = require('path');
var fs = require('fs');
var app = require('../cli');

var printDirFiles = function(dir) {
	var getFiles = require('../utils/getFiles');
	var files = getFiles(dir)
	for (var i in files) {
		var file = files[i].replace(dir, "");
		console.log("Writing file:", chalk.green(file));
	};
};

var create = function(_name, _basedir, callback) {

	var scaffolds = path.join(__dirname, '..', '..', 'scaffolds', 'project');
	var project_root = _basedir + "/" + _name;
	var existsSync = fs.existsSync || path.existsSync;
	var spawn = require('../tasks/spawn');
	var bowerInstall = require('../tasks/bower-install');
	var npmInstall = require('../tasks/npm-install');
	var cp = require('../tasks/cp');

	if (!_name) {
		this.log.error('The `base create` command requires a name to be specified');
		return callback();
	}

	if (!_basedir) {
		this.log.error('The `base create` command requires a path to be specified');
		return callback();
	}

	if (!existsSync(_basedir)) {
		this.log.error(chalk.yellow(_basedir) + 'directory not found.');
		return callback();
	}

	console.log(chalk.bold.magenta("Creating '" + _name + "' application at: "), _basedir);

	printDirFiles(scaffolds);

	cp(scaffolds, project_root)
	.then(function () {
		console.log('Setting current working directory:', project_root );
		process.chdir(project_root);
	})
	.then(function () {
		if(!app.argv["skip-bower"]) {
			return bowerInstall({verbose: true});
		}
	})
	.then(function () {
		if(!app.argv["skip-npm"]) {
			return npmInstall();
		}
	})
	// capture errors on cli scope
	//.catch(function(error) {
	//	// handle errors
	//	console.log(error);
	//});
	.finally(function(){
		callback(null);
	});
};

create.usage = [
	'The ' + '`base create`'.magenta + ' generates create a new project on the specified path',
	'',
	'Usage:'.cyan.bold.underline,
	'',
	' base create'
];

module.exports = create;